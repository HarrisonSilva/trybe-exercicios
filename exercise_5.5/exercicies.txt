Para fixar
Vamos fazer uma salada de frutas com os itens adicionais que voc√™ desejar.

Fa√ßa uma fun√ß√£o chamada fruitSalad, passando como par√¢metro specialFruit e additionalItens; fa√ßa a fun√ß√£o retornar uma lista √∫nica, contendo todos os itens da nossa salada de frutas, usando o spread.

// Fa√ßa uma lista com as suas frutas favoritas
const specialFruit = ['', '', ''];

// Fa√ßa uma lista de complementos que voc√™ gostaria de adicionar
const additionalItens = ['', '', ''];

const fruitSalad = (fruit, additional) => {
  // Escreva sua fun√ß√£o aqui
};

console.log(fruitSalad(specialFruit, additionalItens));

GABARITO
https://app.betrybe.com/learn/course/5e938f69-6e32-43b3-9685-c936530fd326/module/fc998c60-386e-46bc-83ca-4269beb17e17/section/ccfff26d-24c9-422e-b886-6ee19f20db14/day/e010e204-be86-4fc6-8aea-c834ec733ffd/lesson/5d10f207-057b-4ebe-af8a-f3139e331ce6/solution

-----------------------------------------------------

Para Fixar
Crie um terceiro objeto, que ter√° os dados pessoais e os dados de cargo juntos.
Existem dois objetos referentes a uma pessoa usu√°ria, um com informa√ß√µes pessoais e outro com informa√ß√µes referentes ao seu cargo na empresa trappistEnterprise. Voc√™ precisa criar um terceiro objeto, que ter√° os dados pessoais e os dados de cargo juntos. Para isso, utilize o spread operator.


const user = {
  name: 'Maria',
  age: 21,
  nationality: 'Brazilian',
};

const jobInfos = {
  profession: 'Software engineer',
  squad: 'Rocket Landing Logic',
  squadInitials: 'RLL',
};

Imprima no console uma frase utilizando os dados do objeto criado anteriormente. Para isso, utilize a desestrutura√ß√£o de objetos em conjunto com template literals.
Exemplo: "Hi, my name is Maria, I'm 21 years old and I'm Brazilian. I work as a Software engineer and my squad is RLL-Rocket Landing Logic"

GABARITO
https://app.betrybe.com/learn/course/5e938f69-6e32-43b3-9685-c936530fd326/module/fc998c60-386e-46bc-83ca-4269beb17e17/section/ccfff26d-24c9-422e-b886-6ee19f20db14/day/e010e204-be86-4fc6-8aea-c834ec733ffd/lesson/326bf3ac-3df6-449e-bcc2-2cad8787a079/solution

---------------------------------------------------------------------------------------

Exerc√≠cios - agora, a pr√°tica
Instru√ß√µes para a realiza√ß√£o dos exerc√≠cios
Todos os exerc√≠cios cont√™m um c√≥digo-base. Voc√™ dever√° copiar esse c√≥digo e salv√°-lo em um arquivo nomeado conforme o n√∫mero do exerc√≠cio. Por exemplo, o exerc√≠cio 1 deve ser salvo no arquivo exercise1.js, e assim por diante.

üöÄ Se liga nesse foguete!

Os exerc√≠cios destacados com üöÄ s√£o os fundamentais pra voc√™ ir bem no projeto! Todos os exerc√≠cios v√£o contribuir com sua forma√ß√£o, mas fique de olho nesses! üëÄ

Exerc√≠cio 1
Dado o c√≥digo abaixo, altere a chamada da fun√ß√£o rectangleArea de forma que seja impressa a √°rea dos 3 ret√¢ngulos (rectangle1, rectangle2 e rectangle3). O c√≥digo deve retornar em sequ√™ncia 2, 15 e 54.

const rectangleArea = (width, height) => width * height;

const rectangle1 = [1, 2];
const rectangle2 = [3, 5];
const rectangle3 = [6, 9];
const rectangles = [rectangle1, rectangle2, rectangle3];

rectangles.forEach((rectangle) => {
  console.log(rectangleArea(parametro)); // Altere o par√¢metro recebido por rectangleArea()
});

Exerc√≠cio 2
Crie uma fun√ß√£o sum que, dado um n√∫mero ilimitado de par√¢metros, retorna a soma desses par√¢metros. Ao chamar a fun√ß√£o dessa forma : sum(4,5,6), o n√∫mero 15 deve ser retornado.

Exerc√≠cio 3
Escreva a fun√ß√£o personLikes, que recebe como par√¢metro os objetos alex ou gunnar. Cada objeto representa uma pessoa, e a fun√ß√£o deve retornar todos os gostos daquela pessoa, conforme mostrado abaixo:

// name: nome da pessoa, age: idade, likes: gosta de, nationality: nacionalidade

const alex = {
  name: 'Alex',
  age: 26,
  likes: ['fly fishing'],
  nationality: 'Australian',
};

const gunnar = {
  name: 'Gunnar',
  age: 30,
  likes: ['hiking', 'scuba diving', 'taking pictures'],
  nationality: 'Icelandic',
};

// complete a assinatura da fun√ß√£o abaixo
const personLikes = () => `${name} is ${age} years old and likes ${likes.join(', ')}.`;
// <nome> tem <anos de idade> e gosta de <gostos da pessoa>

// Retornos esperados:
console.log(personLikes(alex)); // 'Alex is 26 years old and likes fly fishing.'
console.log(personLikes(gunnar)); // 'Gunnar is 30 years old and likes hiking, scuba diving, taking pictures.'

üöÄ Exerc√≠cio 4
Escreva uma fun√ß√£o filterPeople que, dada uma lista de pessoas, retorna todas as pessoas australianas que nasceram no s√©culo 20:

const people = [
  {
    name: 'Nicole',
    bornIn: 1992,
    nationality: 'Australian',
  },
  {
    name: 'Harry',
    bornIn: 2008,
    nationality: 'Australian',
  },
  {
    name: 'Toby',
    bornIn: 1901,
    nationality: 'Australian',
  },
  {
    name: 'Frida',
    bornIn: 1960,
    nationality: 'Dannish',
  },
  {
    name: 'Fernando',
    bornIn: 2001,
    nationality: 'Brazilian',
  },
  // bornIn: nascido em
];

// escreva filterPeople abaixo

Exerc√≠cio 5
Escreva uma fun√ß√£o shipLength que, dado um objeto representando um navio, retorna o comprimento dele, mostrando tamb√©m a devida unidade de medida:

const ships = [
  {
    name: 'Titanic',
    length: 269.1,
    measurementUnit: 'meters',
  },
  {
    name: 'Queen Mary 2',
    length: 1132,
    measurementUnit: 'feet',
  },
  {
    name: 'Yamato',
    length: 256,
    measurementUnit: 'meters',
  },
  // measurementUnit: unidade de medida
];

// escreva shipLength abaixo

// retorno esperado
console.log(shipLength(ships[0])); // 'Titanic is 269.1 meters long'
console.log(shipLength(ships[1])); // 'Queen Mary 2 is 1132 feet long'
console.log(shipLength(ships[2])); // 'Yamato is 256 meters long'

Exerc√≠cio 6
O objeto yearSeasons representa as esta√ß√µes do ano. Cada chave do objeto √© uma esta√ß√£o, e o valor de cada chave √© um array de strings que representa os meses daquela esta√ß√£o. A partir desse objeto, desestruture as esta√ß√µes do ano e espalhe-as em um array de meses do ano.
Obs. üí¨: As esta√ß√µes do ano aqui descritas t√™m base nas esta√ß√µes do hemisf√©rio norte.


const yearSeasons = {
  spring: ['March', 'April', 'May'],
  summer: ['June', 'July', 'August'],
  autumn: ['September', 'October', 'November'],
  winter: ['December', 'January', 'February'],
};
// yearSeasons: esta√ß√µes do ano.


GABARITO
https://app.betrybe.com/learn/course/5e938f69-6e32-43b3-9685-c936530fd326/module/fc998c60-386e-46bc-83ca-4269beb17e17/section/ccfff26d-24c9-422e-b886-6ee19f20db14/day/e010e204-be86-4fc6-8aea-c834ec733ffd/lesson/566df9a2-7d71-4e38-988e-8955624fc629/solution

-----------------------------------------------------------

